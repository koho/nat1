// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: conf.proto

package pb

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stun     *Stun      `protobuf:"bytes,1,opt,name=stun,proto3" json:"stun,omitempty"`
	Dns      *string    `protobuf:"bytes,2,opt,name=dns,proto3,oneof" json:"dns,omitempty"`
	Services []*Service `protobuf:"bytes,3,rep,name=services,proto3" json:"services,omitempty"`
	// Types that are assignable to Ns:
	//
	//	*Config_Dnspod
	Ns isConfig_Ns `protobuf_oneof:"ns"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_conf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_conf_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetStun() *Stun {
	if x != nil {
		return x.Stun
	}
	return nil
}

func (x *Config) GetDns() string {
	if x != nil && x.Dns != nil {
		return *x.Dns
	}
	return ""
}

func (x *Config) GetServices() []*Service {
	if x != nil {
		return x.Services
	}
	return nil
}

func (m *Config) GetNs() isConfig_Ns {
	if m != nil {
		return m.Ns
	}
	return nil
}

func (x *Config) GetDnspod() *DNSPod {
	if x, ok := x.GetNs().(*Config_Dnspod); ok {
		return x.Dnspod
	}
	return nil
}

type isConfig_Ns interface {
	isConfig_Ns()
}

type Config_Dnspod struct {
	Dnspod *DNSPod `protobuf:"bytes,4,opt,name=dnspod,proto3,oneof"`
}

func (*Config_Dnspod) isConfig_Ns() {}

type DNSPod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretId  string `protobuf:"bytes,1,opt,name=secret_id,json=secretId,proto3" json:"secret_id,omitempty"`
	SecretKey string `protobuf:"bytes,2,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
}

func (x *DNSPod) Reset() {
	*x = DNSPod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DNSPod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSPod) ProtoMessage() {}

func (x *DNSPod) ProtoReflect() protoreflect.Message {
	mi := &file_conf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSPod.ProtoReflect.Descriptor instead.
func (*DNSPod) Descriptor() ([]byte, []int) {
	return file_conf_proto_rawDescGZIP(), []int{1}
}

func (x *DNSPod) GetSecretId() string {
	if x != nil {
		return x.SecretId
	}
	return ""
}

func (x *DNSPod) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain   string            `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Network  string            `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Local    string            `protobuf:"bytes,3,opt,name=local,proto3" json:"local,omitempty"`
	Priority *uint32           `protobuf:"varint,4,opt,name=priority,proto3,oneof" json:"priority,omitempty"`
	Target   string            `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	Alpn     []string          `protobuf:"bytes,6,rep,name=alpn,proto3" json:"alpn,omitempty"`
	Hint     bool              `protobuf:"varint,7,opt,name=hint,proto3" json:"hint,omitempty"`
	Params   map[string]string `protobuf:"bytes,8,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Https    bool              `protobuf:"varint,9,opt,name=https,proto3" json:"https,omitempty"`
	Rid      string            `protobuf:"bytes,10,opt,name=rid,proto3" json:"rid,omitempty"`
	A        bool              `protobuf:"varint,11,opt,name=a,proto3" json:"a,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_conf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_conf_proto_rawDescGZIP(), []int{2}
}

func (x *Service) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Service) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Service) GetLocal() string {
	if x != nil {
		return x.Local
	}
	return ""
}

func (x *Service) GetPriority() uint32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *Service) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Service) GetAlpn() []string {
	if x != nil {
		return x.Alpn
	}
	return nil
}

func (x *Service) GetHint() bool {
	if x != nil {
		return x.Hint
	}
	return false
}

func (x *Service) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Service) GetHttps() bool {
	if x != nil {
		return x.Https
	}
	return false
}

func (x *Service) GetRid() string {
	if x != nil {
		return x.Rid
	}
	return ""
}

func (x *Service) GetA() bool {
	if x != nil {
		return x.A
	}
	return false
}

type Stun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tcp      *Stun_TCP `protobuf:"bytes,1,opt,name=tcp,proto3" json:"tcp,omitempty"`
	Udp      *Stun_UDP `protobuf:"bytes,2,opt,name=udp,proto3" json:"udp,omitempty"`
	Interval *uint64   `protobuf:"varint,3,opt,name=interval,proto3,oneof" json:"interval,omitempty"`
}

func (x *Stun) Reset() {
	*x = Stun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stun) ProtoMessage() {}

func (x *Stun) ProtoReflect() protoreflect.Message {
	mi := &file_conf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stun.ProtoReflect.Descriptor instead.
func (*Stun) Descriptor() ([]byte, []int) {
	return file_conf_proto_rawDescGZIP(), []int{3}
}

func (x *Stun) GetTcp() *Stun_TCP {
	if x != nil {
		return x.Tcp
	}
	return nil
}

func (x *Stun) GetUdp() *Stun_UDP {
	if x != nil {
		return x.Udp
	}
	return nil
}

func (x *Stun) GetInterval() uint64 {
	if x != nil && x.Interval != nil {
		return *x.Interval
	}
	return 0
}

type Stun_TCP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr         string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	KeepaliveUrl string `protobuf:"bytes,2,opt,name=keepalive_url,json=keepaliveUrl,proto3" json:"keepalive_url,omitempty"`
}

func (x *Stun_TCP) Reset() {
	*x = Stun_TCP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stun_TCP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stun_TCP) ProtoMessage() {}

func (x *Stun_TCP) ProtoReflect() protoreflect.Message {
	mi := &file_conf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stun_TCP.ProtoReflect.Descriptor instead.
func (*Stun_TCP) Descriptor() ([]byte, []int) {
	return file_conf_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Stun_TCP) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Stun_TCP) GetKeepaliveUrl() string {
	if x != nil {
		return x.KeepaliveUrl
	}
	return ""
}

type Stun_UDP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Stun_UDP) Reset() {
	*x = Stun_UDP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stun_UDP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stun_UDP) ProtoMessage() {}

func (x *Stun_UDP) ProtoReflect() protoreflect.Message {
	mi := &file_conf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stun_UDP.ProtoReflect.Descriptor instead.
func (*Stun_UDP) Descriptor() ([]byte, []int) {
	return file_conf_proto_rawDescGZIP(), []int{3, 1}
}

func (x *Stun_UDP) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

var File_conf_proto protoreflect.FileDescriptor

var file_conf_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62,
	0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb3, 0x01, 0x0a, 0x06, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x04, 0x73, 0x74, 0x75, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x75, 0x6e, 0x52, 0x04, 0x73, 0x74,
	0x75, 0x6e, 0x12, 0x1f, 0x0a, 0x03, 0x64, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x4a, 0x01, 0x3a, 0x48, 0x01, 0x52, 0x03, 0x64, 0x6e, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x64, 0x6e, 0x73, 0x70, 0x6f, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x4e, 0x53, 0x50,
	0x6f, 0x64, 0x48, 0x00, 0x52, 0x06, 0x64, 0x6e, 0x73, 0x70, 0x6f, 0x64, 0x42, 0x09, 0x0a, 0x02,
	0x6e, 0x73, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x64, 0x6e, 0x73, 0x22,
	0x56, 0x0a, 0x06, 0x44, 0x4e, 0x53, 0x50, 0x6f, 0x64, 0x12, 0x24, 0x0a, 0x09, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x8e, 0x03, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x68, 0x01, 0x52, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x12, 0x29, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xfa, 0x42, 0x0c, 0x72, 0x0a, 0x52, 0x03, 0x74, 0x63,
	0x70, 0x52, 0x03, 0x75, 0x64, 0x70, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12,
	0x1e, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x72, 0x03, 0x4a, 0x01, 0x3a, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12,
	0x28, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x6c, 0x70, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x6c, 0x70, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x74,
	0x74, 0x70, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x68, 0x74, 0x74, 0x70, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72,
	0x69, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x01, 0x61,
	0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0xd8, 0x01, 0x0a, 0x04, 0x53, 0x74, 0x75,
	0x6e, 0x12, 0x1e, 0x0a, 0x03, 0x74, 0x63, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x75, 0x6e, 0x2e, 0x54, 0x43, 0x50, 0x52, 0x03, 0x74, 0x63,
	0x70, 0x12, 0x1e, 0x0a, 0x03, 0x75, 0x64, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x75, 0x6e, 0x2e, 0x55, 0x44, 0x50, 0x52, 0x03, 0x75, 0x64,
	0x70, 0x12, 0x28, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x48, 0x00, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x1a, 0x3e, 0x0a, 0x03, 0x54,
	0x43, 0x50, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c,
	0x69, 0x76, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6b,
	0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x55, 0x72, 0x6c, 0x1a, 0x19, 0x0a, 0x03, 0x55,
	0x44, 0x50, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x42, 0x1c, 0x5a, 0x1a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6b, 0x6f, 0x68, 0x6f, 0x2f, 0x6e, 0x61, 0x74, 0x31, 0x2f, 0x70, 0x62, 0x3b, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_conf_proto_rawDescOnce sync.Once
	file_conf_proto_rawDescData = file_conf_proto_rawDesc
)

func file_conf_proto_rawDescGZIP() []byte {
	file_conf_proto_rawDescOnce.Do(func() {
		file_conf_proto_rawDescData = protoimpl.X.CompressGZIP(file_conf_proto_rawDescData)
	})
	return file_conf_proto_rawDescData
}

var file_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_conf_proto_goTypes = []interface{}{
	(*Config)(nil),   // 0: pb.Config
	(*DNSPod)(nil),   // 1: pb.DNSPod
	(*Service)(nil),  // 2: pb.Service
	(*Stun)(nil),     // 3: pb.Stun
	nil,              // 4: pb.Service.ParamsEntry
	(*Stun_TCP)(nil), // 5: pb.Stun.TCP
	(*Stun_UDP)(nil), // 6: pb.Stun.UDP
}
var file_conf_proto_depIdxs = []int32{
	3, // 0: pb.Config.stun:type_name -> pb.Stun
	2, // 1: pb.Config.services:type_name -> pb.Service
	1, // 2: pb.Config.dnspod:type_name -> pb.DNSPod
	4, // 3: pb.Service.params:type_name -> pb.Service.ParamsEntry
	5, // 4: pb.Stun.tcp:type_name -> pb.Stun.TCP
	6, // 5: pb.Stun.udp:type_name -> pb.Stun.UDP
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_conf_proto_init() }
func file_conf_proto_init() {
	if File_conf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_conf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DNSPod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stun_TCP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stun_UDP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_conf_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Config_Dnspod)(nil),
	}
	file_conf_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_conf_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_conf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_conf_proto_goTypes,
		DependencyIndexes: file_conf_proto_depIdxs,
		MessageInfos:      file_conf_proto_msgTypes,
	}.Build()
	File_conf_proto = out.File
	file_conf_proto_rawDesc = nil
	file_conf_proto_goTypes = nil
	file_conf_proto_depIdxs = nil
}
